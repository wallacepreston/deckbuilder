{"version":3,"sources":["api/index.js","components/SearchBar.js","components/Card.js","components/SearchResults.js","components/DeckList.js","index.js"],"names":["fetchCards","a","name","text","axios","get","data","cards","SearchBar","setResults","useState","setName","setText","event","preventDefault","id","onSubmit","type","placeholder","value","onChange","target","Card","manaCost","flavor","imageUrl","addCardToDeck","removeCardFromDeck","className","src","onClick","SearchResults","results","length","map","result","key","DeckList","deck","cardCount","reduce","card","count","App","setDeck","nextDeck","index","findIndex","push","splice","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.b47ef102.chunk.js","sourcesContent":["import axios from 'axios';\n\nexport async function fetchCards({ name, text }) {\n  try {\n    const { data } = await axios.get(\n      `https://api.magicthegathering.io/v1/cards?name=${ name }&text=${ text }`\n    );\n\n    return data.cards || [];\n  } catch (error) {\n    throw error;\n  }\n}","import React, { useState } from 'react';\n\nimport {\n  fetchCards,\n} from '../api';\n\nfunction SearchBar ({ setResults }) {\n  const [name, setName] = useState('');\n  const [text, setText] = useState('');\n\n  const handleNameChange = event => {\n    setName( event.target.value );\n  }\n\n  const handleTextChange = event => {\n    setText( event.target.value );\n  }\n\n  async function handleSubmit(event) {\n    event.preventDefault();\n\n    const cards = await fetchCards({\n      name,\n      text\n    });\n\n    setResults(cards);\n  }\n\n  return (\n    <div id=\"search\">\n      <h3>Look up cards here...</h3>\n      <form onSubmit={ handleSubmit }>\n        <input\n          type=\"text\" \n          placeholder=\"card name\"\n          value={ name }\n          onChange={ handleNameChange } />\n        <input\n          type=\"text\"\n          placeholder=\"card text\"\n          value={ text }\n          onChange={ handleTextChange } />\n        <button type=\"submit\">Search</button>\n      </form>\n    </div>\n  );\n}\n\nexport default SearchBar;","import React from 'react';\nimport './Card.css';\n\nconst Card = ({\n  id,\n  name,\n  type,\n  manaCost,\n  text,\n  flavor,\n  imageUrl,\n  addCardToDeck,\n  removeCardFromDeck\n}) => {\n  return (\n    <div className=\"Card\">\n      <div className=\"info\">\n        <p className=\"header\">\n          { name } - { manaCost }\n        </p>\n        <p className=\"type\">\n          { type }\n        </p>\n        <p className=\"text\">\n          { text }\n        </p>\n        <p className=\"flavor\">\n          { flavor }\n        </p>\n      </div>\n      <img className=\"preview\" src={ imageUrl } />\n      <div className=\"actions\">\n        <button\n          onClick={() => {\n            addCardToDeck({\n              id,\n              name\n            })\n          }}>\n            (+) Add to Deck\n          </button>\n        <button\n          onClick={() => {\n            removeCardFromDeck({\n              id\n            })\n          }}>\n          (-) Remove from Deck\n        </button>\n      </div>\n    </div>\n  );\n}\n\nexport default Card;","import React from 'react';\n\nimport Card from './Card';\nimport './SearchResults.css';\n\nconst SearchResults = ({ \n  results,\n  addCardToDeck,\n  removeCardFromDeck\n}) => {\n  return (\n    <div id=\"results\">\n      <h3>Here's what we found ({ results.length } results):</h3>\n      <div className=\"CardList\">\n        {\n          results.map(result => (\n            <Card \n              key={ result.id } \n              addCardToDeck={ addCardToDeck }\n              removeCardFromDeck={ removeCardFromDeck }\n              {...result} />\n          ))\n        }\n      </div>\n    </div>\n  );\n}\n\nexport default SearchResults;","import React from 'react';\n\nconst DeckList = ({ \n  deck,\n  addCardToDeck,\n  removeCardFromDeck\n }) => {\n  let cardCount = deck.reduce((cardCount, card) => {\n    return cardCount + card.count\n  }, 0);\n\n  return (\n    <div id=\"deck\">\n      <h3>Your deck so far ({ cardCount } cards):</h3>\n      <div className=\"DeckList\">\n      {deck.map(({ id, name, count }) => (\n        <p key={ id }>\n          <span>\n            ({ count }x) { name }\n          </span><br /> \n          <button onClick={\n            () => addCardToDeck({ id, name })\n          }> + </button>\n          <button onClick={\n            () => removeCardFromDeck({ id })\n          }> - </button>\n        </p>\n      ))}\n      </div>\n    </div>\n  );\n}\n\nexport default DeckList;","import React, { useState } from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './index.css';\nimport axios from 'axios';\n\nimport {\n  fetchCards,\n} from './api';\n\nimport {\n  DeckList,\n  SearchBar,\n  SearchResults\n} from './components';\n\nconst App = () => {\n  const [results, setResults] = useState([]);\n  const [deck, setDeck] = useState([]);\n\n  const addCardToDeck = ({ id, name }) => {\n    const nextDeck = [...deck]; // make a duplicate first\n    const index = nextDeck.findIndex(card => card.id === id);\n    \n    // index will be -1 if it is not found\n    if (index > -1) {\n      nextDeck[index].count += 1;\n    } else {\n      nextDeck.push({\n        id,\n        name,\n        count: 1\n      });\n    }\n    \n  \n    setDeck(nextDeck);\n  }\n\n  const removeCardFromDeck = ({ id }) => {\n    const nextDeck = [...deck];\n    const index = nextDeck.findIndex(card => card.id === id);\n  \n    if (index === -1) {\n      // don't do anything if we're trying to remove a card not in the deck\n      return;\n    }\n  \n    if (nextDeck[index].count === 1) {\n      // remove the card altogether\n      nextDeck.splice(index, 1);\n    } else {\n      // decrement the count\n      nextDeck[index].count -= 1;\n    }\n  \n    setDeck(nextDeck);\n  }\n\n  return (\n    <div id=\"app\">\n      <SearchBar setResults={ setResults } />\n      <SearchResults \n        results={ results }\n        addCardToDeck={ addCardToDeck }\n        removeCardFromDeck={ removeCardFromDeck }\n      />\n      <DeckList deck={ deck }\n        addCardToDeck={ addCardToDeck }\n        removeCardFromDeck={ removeCardFromDeck }\n      />\n    </div>\n  );\n}\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);"],"sourceRoot":""}